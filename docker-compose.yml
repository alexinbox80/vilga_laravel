version: '3'
services:
    #Laravel App
    app:
        build:
            context: ./docker
            dockerfile: Dockerfile
            args:
                WEBROOT: '${WEBROOT:-/var/www/html}'
                WWWGROUP: '${WWWGROUP}'
                TIMEZONE: '${APP_TIMEZONE}'
        image: vilga:v1
        extra_hosts:
            - '${SEND_API_HOST}:${APP_HOST_IP:-127.0.0.1}'
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
        working_dir: '${WEBROOT}'
        volumes:
            - './:${WEBROOT}'
        networks:
            - mynet
        depends_on:
            - nginx
            - pgsql

    #Nginx Service
    nginx:
        image: nginx
        restart: unless-stopped
        tty: true
        environment:
            WEBROOT: '${WEBROOT:-/var/www/html}'
            NGINX_HOST: '${APP_SERVER_NAME}'
            NGINX_HTTP_PORT: '${NGINX_HTTP_PORT:-80}'
            NGINX_HTTPS_PORT: '${NGINX_HTTPS_PORT:-443}'
            #FORWARD_HTTPS_PORT: '${FORWARD_HTTPS_PORT}'
        ports:
            - '${FORWARD_HTTP_PORT:-80}:${NGINX_HTTP_PORT:-80}'
            - '${FORWARD_HTTPS_PORT:-443}:${NGINX_HTTPS_PORT:-443}'
        volumes:
            - './:${WEBROOT}'
            - ./docker/nginx/conf.d/default.conf:/etc/nginx/templates/default.conf.template
#            - ./docker/nginx/ssl/:/etc/nginx/ssl/
        networks:
            - mynet

    #Postgre Service
    pgsql:
        image: 'postgres:15'
        ports:
            - '${DB_PORT:-5432}:${DOCKER_DB_PORT:-5432}'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
            SERVICE_NAME: pgsql
        volumes:
            - 'pgsql:/var/lib/postgresql/data'
            - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - mynet
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
            retries: 3
            timeout: 5s

#Docker Networks
networks:
    mynet:
        driver: bridge

#Volumes
volumes:
    pgsql:
        driver: local
